{"version":3,"sources":["components/banner.js","components/body.js","components/input.js","App.js"],"names":["banner","props","View","style","styles","bannerContainer","Text","bannerText","bannerSubText","fontSize","color","TouchableOpacity","deleteAllBtn","onPress","data","a","async","AsyncStorage","setItem","JSON","stringify","error","console","log","message","then","setList","name","size","deleteText","StyleSheet","create","flexDirection","alignItems","justifyContent","width","flex","margin","fontFamily","fontWeight","marginTop","padding","paddingHorizontal","borderRadius","borderWidth","backgroundColor","storeData","body","bodyContainer","FlatList","numColumns","Dimensions","get","list","keyExtractor","item","key","renderItem","taskItem","status","taskComplete","taskIncomplete","itemKey","newTasks","map","task","changeTaskStatus","taskText","filter","removeTask","marginBottom","marginHorizontal","height","input","useState","inputVal","setInputVal","inputContainer","TextInput","onChangeText","val","value","placeholder","placeholderTextColor","inputField","addButtonContainer","length","MaterialIcons","addButton","zIndex","bottom","position","App","ready","setReady","useFonts","Raleway_100Thin","Raleway_300Light","Raleway_400Regular","fontsLoaded","tasks","setTasks","handleSetTask","newState","mainContainer","StatusBar","translucent","startAsync","getItem","parse","onFinish","onError","warn"],"mappings":"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","file":"static/js/app.c7d76a18.chunk.js","sourcesContent":["import { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport MaterialIcon from 'react-native-vector-icons/MaterialIcons';\r\n\r\nconst storeData = async (data) => {\r\n    try {\r\n        AsyncStorage.setItem('@tasker', JSON.stringify(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport default function banner(props) {\r\n\r\n    const emptyList = () => {\r\n        storeData([]).then(props.setList([]));\r\n    };\r\n\r\n    return (\r\n        <View style={styles.bannerContainer}>\r\n            <Text style={styles.bannerText}>\r\n                Tasker\r\n                <Text style={styles.bannerSubText}>\r\n                    2.0\r\n                    <Text style={{fontSize: 10, color: '#5e5e5e'}}> By Aum</Text>\r\n                </Text>\r\n            </Text>\r\n            <TouchableOpacity\r\n                style={styles.deleteAllBtn}\r\n                onPress={emptyList}\r\n            >\r\n                <MaterialIcon\r\n                    name='delete'\r\n                    size={20}\r\n                    color={'white'}\r\n                />\r\n                <Text style={styles.deleteText}>Clear</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    bannerContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        \r\n\r\n    },\r\n    bannerText: {\r\n        flex: 5,\r\n        margin: 5,\r\n\r\n        \r\n        fontSize: 40,\r\n        fontFamily: 'Raleway_100Thin',\r\n\r\n        color: 'white',\r\n    },\r\n    bannerSubText: {\r\n        fontSize: 20,\r\n        fontFamily: 'Raleway_400Regular',\r\n        fontWeight: '500',\r\n        color: '#fff'\r\n    },\r\n    deleteAllBtn: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems:'center',\r\n        justifyContent: 'center',\r\n\r\n        margin: 5,\r\n        marginTop: 15,\r\n        padding: 5,\r\n        paddingHorizontal: 10,\r\n\r\n        borderRadius: 100,\r\n        borderWidth: 1,\r\n\r\n        color: 'white',\r\n        backgroundColor: '#131313'\r\n    },\r\n    deleteText: {\r\n        fontSize: 15,\r\n        fontFamily: 'Raleway_400Regular',\r\n        color: 'white',\r\n    },\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, FlatList, Text, TouchableOpacity, Dimensions } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport MaterialIcon from 'react-native-vector-icons/MaterialIcons';\r\n\r\nconst storeData = async (data) => {\r\n    try {\r\n        AsyncStorage.setItem('@tasker', JSON.stringify(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport default function body(props) {\r\n    const changeTaskStatus = (itemKey) => {\r\n        var newTasks = props.list.map((item) => (\r\n                            item = { key: item.key, task: item.task, status: (item.key === itemKey) ? !item.status : item.status }\r\n                        ));\r\n        \r\n        storeData(newTasks).then(props.setList(newTasks));\r\n    };\r\n\r\n    const removeTask = (itemKey) => {\r\n        var newTasks = props.list.filter((item) => item.key !== itemKey);\r\n        storeData(newTasks).then(props.setList(newTasks));\r\n    };\r\n\r\n    const displayTasks = ({ item }) => (\r\n        <TouchableOpacity\r\n            style={[styles.taskItem, (item.status) ? styles.taskComplete : styles.taskIncomplete ]}\r\n            onPress={() => changeTaskStatus(item.key)}\r\n        >\r\n            <MaterialIcon\r\n                name={(item.status) ? 'check-box' : 'check-box-outline-blank'}\r\n                color={'white'}\r\n                size={22}\r\n            />\r\n            <Text style={styles.taskText}>{item.task}</Text>\r\n            <TouchableOpacity\r\n                onPress={() => {removeTask(item.key)}}\r\n            >\r\n                <MaterialIcon\r\n                    name='close'\r\n                    color={'white'}\r\n                    size={22}\r\n                />\r\n            </TouchableOpacity>\r\n        </TouchableOpacity>\r\n    );\r\n    return (\r\n        <View style={styles.bodyContainer}>\r\n            <FlatList\r\n                numColumns={(Dimensions.get('window').width >= 450) ? 2 : 0}\r\n                data={props.list}\r\n                keyExtractor={(item) => item.key}\r\n                renderItem={displayTasks}\r\n            ></FlatList>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    bodyContainer: {\r\n        flex: 1,\r\n        marginBottom: 55,\r\n\r\n    },\r\n    taskItem: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n\r\n        margin: 10,\r\n        marginHorizontal: 15,\r\n        padding: 10,\r\n\r\n        borderRadius: 10, \r\n\r\n    },\r\n    taskText: {\r\n        width: '80%',\r\n        height: '100%',\r\n\r\n        padding: 5,\r\n\r\n        fontSize: 22,\r\n        fontFamily: 'Raleway_300Light',\r\n        color: 'white',\r\n    },\r\n\r\n    taskComplete: {\r\n        backgroundColor: '#10ac84'\r\n    },\r\n    taskIncomplete: {\r\n        backgroundColor: '#131313'\r\n    },\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'\r\n\r\nconst storeData = async (data) => {\r\n    try {\r\n        AsyncStorage.setItem('@tasker', JSON.stringify(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport default function input(props) {\r\n    const [inputVal, setInputVal] = useState('');\r\n\r\n    const addNewTask = () => {\r\n        var newTasks = [...props.list, { key: props.list.length + 1, task: inputVal, status: false }];\r\n        storeData(newTasks).then(props.setList(newTasks)).then(setInputVal(''));\r\n    };\r\n\r\n    return(\r\n        <View style={styles.inputContainer}>\r\n            <TextInput\r\n                onChangeText={(val) => setInputVal(val)}\r\n                value={inputVal}\r\n                placeholder='Enter new task'\r\n                placeholderTextColor='#7e7e7e'\r\n                style={styles.inputField} />\r\n            <TouchableOpacity\r\n                style={styles.addButtonContainer}\r\n                onPress={addNewTask}\r\n            >\r\n                <MaterialIcons\r\n                    name='add'\r\n                    size={25}\r\n                    color={'white'}\r\n                    style={styles.addButton}/>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer: {\r\n        zIndex: 999,\r\n        width: '100%',\r\n        bottom: 0,\r\n        position: 'absolute',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    inputField: {\r\n        flex: 9,\r\n        height: '70%',\r\n\r\n        margin: 3,\r\n        padding: 10,\r\n\r\n        borderRadius: 50,\r\n\r\n        color: 'white',\r\n        backgroundColor: '#2e2e2e'\r\n    },\r\n    addButtonContainer: {\r\n        width: 40,\r\n        height: 40, \r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n        margin: 3,\r\n\r\n        borderRadius: 500,\r\n\r\n        backgroundColor: '#3e3e3e',\r\n\r\n    },\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, Button, TouchableOpacity } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport AppLoading from 'expo-app-loading';\r\nimport {\r\n    useFonts,\r\n    Raleway_100Thin,\r\n    Raleway_300Light,\r\n    Raleway_400Regular\r\n  } from \"@expo-google-fonts/raleway\";\r\n\r\nimport Banner from './components/banner';\r\nimport Body from './components/body';\r\nimport Input from './components/input';\r\n\r\nexport default function App() {\r\n    const [ready, setReady] = useState(false);\r\n    const [fontsLoaded] = useFonts({\r\n        Raleway_100Thin,\r\n        Raleway_300Light,\r\n        Raleway_400Regular\r\n    });\r\n    const [tasks, setTasks] = useState(\r\n/*         [\r\n            { key: 1, task: \"ABC\", status: false},\r\n            { key: 2, task: \"XYZ\", status: false},\r\n            { key: 3, task: \"LALALL\", status: true},\r\n            { key: 4, task: \"SomeThing.....\", status: false},\r\n        ]  */\r\n    );\r\n\r\n    const getData = async () => {\r\n        try {\r\n            const data = await AsyncStorage.getItem('@tasker');\r\n            if(data !== null)\r\n                setTasks(JSON.parse(data))\r\n            else\r\n                setTasks([]);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n/*     useEffect(() => {\r\n        setTasks(getData)\r\n    }, []); */\r\n\r\n    const handleSetTask = (newState) => {\r\n        setTasks(newState);\r\n    };\r\n\r\n    if(!ready || !fontsLoaded) {\r\n        return (\r\n            <AppLoading\r\n                startAsync={getData}\r\n                onFinish={() => setReady(true)}\r\n                onError={console.warn}\r\n            />\r\n        )\r\n    }\r\n    else return(\r\n        <View style={styles.mainContainer}>\r\n            <StatusBar style='light' backgroundColor='black' translucent={false}/>\r\n            <Banner list={tasks} setList={handleSetTask} />\r\n            <Body list={tasks} setList={handleSetTask} />\r\n            <Input list={tasks} setList={handleSetTask} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        flex: 1,\r\n        backgroundColor: 'black',\r\n    },\r\n});"],"sourceRoot":""}